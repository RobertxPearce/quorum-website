use Libraries.Web.Page.all
use Libraries.Web.Page.Italic
use Libraries.Containers.Array
use Libraries.Web.Page.Image
use Libraries.Web.Page.Bold

class AccessibleAppP1 is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()
    Preformatter preformatter //helper

    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Creating an Accessible App - Quorum Programming Language")
        AddDefaultHeaders()

        //page header
        Array<Division> divs = InitializeTutorialPage()
        Division bodyDiv = divs:Get(1)
        Division onPageDiv = divs:Get(2)

        Header headDiv
        headDiv:SetClassAttribute("flex flex-col gap-y-2")
        AddHeading(headDiv, "Hour 10: Create an Accessible App - Part 1", 1)

        headDiv:AddText("This lesson is to teach you about the Forms library to make an accessible app.")
        bodyDiv:Add(headDiv)

        Section section_overview
        section_overview:SetClassAttribute("flex flex-col gap-y-2")

        AddHeading(section_overview, "Overview", 2)
        section_overview:AddParagraph("In this lesson, you will bring together the concepts you have learned to build an app using Forms. As you learn how to build Form apps, you will learn the importance of user interface design.")

        AddHeading(section_overview, "Goals", 3)
        section_overview:AddParagraph("You have the following goals for this lesson:")
        UnorderedList goalList
        goalList:AddClassAttribute("list-disc list-outside pl-8")
        goalList:AddListItem("Create a Form")
        goalList:AddListItem("Learn about the different kinds of items you can add to forms")
        goalList:AddListItem("Build the interface for an app with at least 1 button")
        goalList:AddListItem("Understand the purpose for user interface design")
        section_overview:Add(goalList)

        bodyDiv:Add(section_overview)

        Section section_warmUp
        section_warmUp:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_warmUp)
        AddHeading(section_warmUp, "Warm up", 2)
        
        section_warmUp:AddParagraph("Think about apps or websites you have used in the past. Can you think of examples of apps or sites that were easy or hard to use? What kinds of things made the difference for you between a good or bad experience?")
       
        AddHeading(section_warmUp, "Vocabulary", 3)

        section_warmUp:AddParagraph("You will be learning about the following vocabulary words: ")
        
        WebTable table = AddWebTable("Vocabulary")
        TableBody tableBody = AddTableBody()
        
        Array<text> tableHeaderArray
        tableHeaderArray:Add("Term")
        tableHeaderArray:Add("Definition") 
   

        TableHeader thead = AddTableHeaderRow(tableHeaderArray)
        table:Add(thead)  

        Array<text> rubricText1
        rubricText1:Add("Forms")
        rubricText1:Add("A library for creating interactive user interfaces") 
   
        tableBody:Add(AddTableBodyRow(rubricText1))

        Array<text> rubricText2
        rubricText2:Add("User Interface")
        rubricText2:Add("A product’s appearance, interactivity, usability, behavior, and feel.") 
  
        tableBody:Add(AddTableBodyRow(rubricText2))

        Array<text> rubricText3
        rubricText3:Add("User Interface Design")
        rubricText3:Add("A person's perceptions and responses that result from the use or anticipated use of a product, system or service.") 
     
        tableBody:Add(AddTableBodyRow(rubricText3))

         Array<text> rubricTextDes
        rubricTextDes:Add("Design")
        rubricTextDes:Add("A plan or prototype that demonstrates the look or function of a product before it is built") 
     
        tableBody:Add(AddTableBodyRow(rubricTextDes))

        Array<text> rubricTextButton
        rubricTextButton:Add("Button")
        rubricTextButton:Add("A control element that provides a way for a user to trigger an event") 
     
        tableBody:Add(AddTableBodyRow(rubricTextButton))
    
        table:Add(tableBody)
        section_warmUp:Add(table)

        section_warmUp:AddParagraph("")
        AddHeading(section_warmUp, "Code", 3)

        section_warmUp:AddParagraph("You will be using the following new pieces of code: ")


        WebTable tableCode = AddWebTable("New Code to Learn")
        TableBody tableBodyCode = AddTableBody()
        
        Array<text> tableHeaderArrayCode
        tableHeaderArrayCode:Add("Quorum Code")
        tableHeaderArrayCode:Add("Code Example") 
        tableHeaderArrayCode:Add("Explanation")

        TableHeader theadCode = AddTableHeaderRow(tableHeaderArrayCode)
        tableCode:Add(theadCode)  

        Array<text> rubricText4
        rubricText4:Add("use NAME")
        rubricText4:Add("use Libraries.Interface.Forms.Form")
        rubricText4:Add("A use statement for the Form object, which is the primary window for an app.") 
   
        tableBodyCode:Add(AddTableBodyRow(rubricText4))

        Array<text> rubricText5
        rubricText5:Add("use  NAME")
        rubricText5:Add("use  Libraries.Interface.Forms.Page")
        rubricText5:Add("A use statement for the Page object. A form can flip between pages as part of an app.") 
  
        tableBodyCode:Add(AddTableBodyRow(rubricText5))

    
        Array<text> rubricTextBtn
        rubricTextBtn:Add("use NAME")
        rubricTextBtn:Add("use Libraries.Interface.Controls.Button")
        rubricTextBtn:Add("A use statement for the Button object. A button can be selected to take an action.") 
  
        tableBodyCode:Add(AddTableBodyRow(rubricTextBtn))

        Array<text> rubricTextForm
        rubricTextForm:Add("Form NAME")
        rubricTextForm:Add("Form form")
        rubricTextForm:Add("A variable declaration that makes a new Form.") 
  
        tableBodyCode:Add(AddTableBodyRow(rubricTextForm))

        Array<text> rubricTextPage
        rubricTextPage:Add("Page NAME")
        rubricTextPage:Add("Page page")
        rubricTextPage:Add("A variable declaration that makes a new Page. You can use the assignment operator on page with a Form") 
  
        tableBodyCode:Add(AddTableBodyRow(rubricTextPage))

        Array<text> rubricTextBtn1
        rubricTextBtn1:Add("Button NAME")
        rubricTextBtn1:Add("Button button")
        rubricTextBtn1:Add("A variable declaration that makes a new Button. You can use the assignment operator on page with a Form.") 
  
        tableBodyCode:Add(AddTableBodyRow(rubricTextBtn1))

        Array<text> rubricTextMain
        rubricTextMain:Add("FormObject:GetMainPage()")
        rubricTextMain:Add("form:GetMainPage()")
        rubricTextMain:Add("Assigns the main page of the form app. This is a formality and typically used for navigational purposes.") 
  
        tableBodyCode:Add(AddTableBodyRow(rubricTextMain))

        Array<text> rubricTextAddBtn
        rubricTextAddBtn:Add("FormObject:AddButton(title)")
        rubricTextAddBtn:Add("form:AddButton("+dq+"Click me!"+dq+")")
        rubricTextAddBtn:Add("Inserts a button into the interface of the Form app") 
  
        tableBodyCode:Add(AddTableBodyRow(rubricTextAddBtn))

        Array<text> rubricTextDisplay
        rubricTextDisplay:Add("FormObject:Display()")
        rubricTextDisplay:Add("form:Display()")
        rubricTextDisplay:Add("When run, the program displays the running app via a Game window.") 
  
        tableBodyCode:Add(AddTableBodyRow(rubricTextDisplay))


        tableCode:Add(tableBodyCode)
        section_warmUp:Add(tableCode)
        section_warmUp:AddParagraph("")

        AddHeading(section_warmUp, "CSTA Standards", 3)
         Paragraph cstaPara
        cstaPara:AddText("This lesson covers the following ")
        Link linkStandards = cstaPara:AddLink("standards", "https://csteachers.org/k12standards/interactive/")
        cstaPara:AddText(":")
        linkStandards:SetTarget(linkStandards:newTab)
        section_warmUp:Add(cstaPara)

        UnorderedList standards
        standards:AddClassAttribute("list-disc list-outside pl-8")
        standards:AddListItem("<strong>2-CS-01</strong>: Recommend improvements to the design of computing devices, based on an analysis of how users nteract with the devices.")
        standards:AddListItem("<strong>1B-CS-02</strong>: Model how computer hardware and software work together as a system to accomplish tasks. ")
        section_warmUp:Add(standards)
  
        Section section_explore
        section_explore:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_explore)
        AddHeading(section_explore, "Explore", 2)
        
        section_explore:AddParagraph("When you hear the term "+dq+"design"+dq+" you might think of the interior design of someone’s home, paintings in a gallery, or something related to art. Design is a much broader term, however, with applications that venture into technology and many other areas. ")
        section_explore:AddParagraph("Many programmers methodically design code and programs to make the most sense to human comprehension. A growing field in the industry is Human Computer Interaction, where their role is to plan, strategize, and design apps and physical products for consumers or ensure a product fits a business’s needs.")
        section_explore:AddParagraph("Think about many of the apps you have used on your smartphone. Often, teams of developers and designers have worked together to produce a refined version of these apps which cater to what users want. This concept is called “user experience”, or sometimes shortened to "+dq+"UX"+dq+" design. The basic idea is you want the user to feel like their needs were taken into account in the design. ")

        AddHeading(section_explore, "Accessibility in Design", 3)
        Link linkAccess
        linkAccess:AddText("Web Content Accessibility Guidelines (WCAG)")
        linkAccess:SetAddress("https://www.w3.org/WAI/standards-guidelines/wcag/")
        linkAccess:SetTarget(linkAccess:newTab)

        Paragraph accessPara
        accessPara:AddText("Accessible design is an important concept for designers to make sure products can be used by everyone. A major consideration that designers should follow as applicable are the ")
        accessPara:Add(linkAccess)
        accessPara:AddText(", which focuses on accessible design on digital products (especially websites). WCAG is unusual in that it dovetails ideas in design, like how a web page is structured, but also serves as legal guidelines from the U.S. Department of Justice as of 2024 [1]. The changes made by this rule are significant, arguably a sea change, in that they require accessibility to be the default under certain conditions. There is plenty of nuance to be considered, but here are some examples of the type of information related to WCAG:
")
        section_explore:Add(accessPara)

        UnorderedList list
        list:AddClassAttribute("list-disc list-outside pl-8")
        list:AddListItem("Alternative Text (Alt-Text) on images and diagrams.")
        list:AddListItem("Requiring appropriate color contrast for readability by anyone, but especially those with low or limited vision
")
        TextLinkList listAria
        listAria:AddClassAttribute("list-disc list-outside pl-8")
        listAria:AddItemWithLinkAndText("https://www.w3.org/TR/wai-aria/", "ARIA Labels", "Providing adequate information for screen readers and other accessibility tools, sometimes including the use of ARIA or app structure.")
        section_explore:Add(listAria)
        list:AddListItem("Providing transcripts for audio resources and subtitles for video resources.")
        section_explore:Add(list)

        section_explore:AddParagraph("When you begin programming your own apps, one thing you can do to make your apps feel more accessible is to ensure that all of your labels and buttons have meaningful, clear, names. This allows any user to understand what is happening in your programs, even if they are using accessibility tools like a screen reader.")
        section_explore:AddParagraph("Most programming languages support libraries for accessibility, in one form or another, but they vary considerably. Sometimes, features that may not seem accessibility related are. For example, languages must support keyboard navigation, present information to screen readers, and support some method for interacting with the operating system's accessibility layer. Further, languages can make it easier or harder to make applications accessible. With color, another common issue in accessibility, if a language makes non-WCAG compatible choices with color contrast, some or many users may find an application harder to read.")

        AddHeading(section_explore, "Creating an App", 3)
        section_explore:AddParagraph("Most programming languages have some mechanism for creating applications or apps, but what that even means varies. For Quorum specifically, apps are coded in one language and in one way, then generated for each platform you are on. The idea is you can write an app once, then run it on desktop, on the web, or on your phone. ")
        section_explore:AddParagraph("The library you will be focusing on for this lesson is the <strong>Form</strong> library. The Form library lets you add <strong>buttons</strong>, input fields, banners, images, etc. and program all these features so that they work with one another. In this lesson, you will learn about the structure and some basic elements within the Form library.")
        AddHeading(section_explore, "Accessing the Form Library", 4)
        section_explore:AddParagraph("There are two ways to access the Form library. The first  is to create a new project and use the default template.  For this, you go to the File Menu and select the New Project button. Similar to how you have been creating console projects, the "+dq+"App"+dq+" project will provide a template for how the program should be structured. Give your project a name and press the "+dq+"Ok"+dq+" button once you are ready to start.")
        
        Image image1 = section_explore:AddImage("/media/Blocks/AccessibleAppP1/CreateProject.png","This shows the new project dialog with the App button selected. There are console, app, game, scene, and mobile options here. There is also a project name, location, browse information, and finally an ok and cancel button.")
        image1:AddText("This shows the new project dialog with the App button selected. There are console, app, game, scene, and mobile options here. There is also a project name, location, browse information, and finally an ok and cancel button.")
        image1:AddAttribute("data-zoom","")
        image1:AddClassAttribute("object-contain rounded overflow-hidden")

        section_explore:AddParagraph("On first glance, notice that your project already has code provided. This template creates a default, puts a button labeled Hi on it, and loads it. Notice you do not need to embed any additional accessibility information. The application is automatically born accessible.")

        Image image2 = section_explore:AddImage("/media/Blocks/AccessibleAppP1/FormTemplate.png","This application shows the default template for an app. It also shows the palette for the Form object.")
        image2:AddText("This application shows the default template for an app. It also shows the palette for the Form object.")
        image2:AddAttribute("data-zoom","")
        image2:AddClassAttribute("object-contain rounded overflow-hidden")

        section_explore:AddParagraph("The first two lines, <code>use Libraries.Interface.Forms.Form</code> and <code>use Libraries.Interface.Forms.Page</code> are the libraries that contain all the objects required to create the form app. The next line, <code>Form form</code>, creates your form object. The Form object is a graphical display that will open a window for your app to run in. Forms are also in charge of storing and keeping track of the different pages in your app. Some users prefer to give an object a different name (e.g., not "+dq+"form"+dq+" to avoid it being the same), but this falls well within personal preference.")
        section_explore:AddParagraph("The next line reads <code>Page page = form:GetMainPage()</code>. A Page is a single screen on your app, including all of the buttons, labels, and other elements that will be on that screen. Just like viewing people’s profiles on Instagram or TikTok, the new displays are new pages.")
        section_explore:AddParagraph("When you use <code>form:GetMainPage()</code>, you are requesting that the system gives you the first Page that will be displayed when the app starts, otherwise known as the main Page. Any kind of interactive <strong>user interface</strong> component, like buttons, text boxes, fields, lists, trees, or other items, are added to a page.")
        section_explore:AddParagraph("Now that you have a Page, you add elements directly to it. This will make your elements appear on the screen. You can see the next line is <code>page:AddButton("+dq+"Hi"+dq+")</code>. This will add a button with a label that says "+dq+"Hi"+dq+" on the first page of the app. Screen readers and other accessibility clients will read that the button is named "+dq+"Hi."+dq+" If you prefer, you can change the name of the item or the description, which alters what accessibility devices would obtain.")
        
        section_explore:AddParagraph("The text form of this code is as follows:")
        section_explore:Add(preformatter:GeneratePreformattedCode("use Libraries.Interface.Forms.Form
use Libraries.Interface.Forms.Page
Form form
Page page = form:GetMainPage()

page:AddButton("+dq+"Hi"+dq+")
form:Display()"))


        section_explore:AddParagraph("Finally, in order to actually use the app, you use <code>form:Display()</code>. This will make the Form open the window and display the main Page. ")

        Image image3 = section_explore:AddImage("/media/Blocks/AccessibleAppP1/RunApp.png","This image shows Quorum Studio, but with your app inside it. It shows that app plus the Hi button in the middle. The button is blue with white text inside it.")
        image3:AddText("This image shows Quorum Studio, but with your app inside it. It shows that app plus the Hi button in the middle. The button is blue with white text inside it.")
        image3:AddAttribute("data-zoom","")
        image3:AddClassAttribute("object-contain rounded overflow-hidden")

        section_explore:AddParagraph("While the template is convenient for creating a Form, it is not required. You could also choose to begin with a blank project and manually type out the libraries and the objects. While this method might be more tedious, all the information is the same. The key elements you should always include in your Form programs should be:")
        section_explore:Add(preformatter:GeneratePreformattedCode("use Libraries.Interface.Forms.Form
use Libraries.Interface.Forms.Page 

Form form 
Page page = form:GetMainPage()

form:Display()
"))

        section_explore:AddParagraph("These five lines of code will be in most Form programs you create. All the other pieces of code are for you to explore and learn to practice creating user interfaces.")

        AddHeading(section_explore, "Adding a Button", 4)
        section_explore:AddParagraph("In order to add a button to your app, you must add it using the Page object by using <code>page:AddButton(name)</code>. The button’s label (and also the button’s name) will match the text you provide to the action.")
        section_explore:AddParagraph("Alternatively, if you have an image file (such as one with the extension JPG or png), you can make a button using that image. In this case, you can use <code>page:AddButton(name, filename)</code>, where the filename is a path to where the image is located. The path is always relative to your project’s location on your computer, so if you use this option, it is highly recommended you store your image files in your project folder.")

        Image image4 = section_explore:AddImage("/media/Blocks/AccessibleAppP1/Button.png","Code blocks from the blocks tab with the page object that read:
page:AddButton(name)
page:AddButton(name, fileName)")
        image4:AddText("Code blocks from the blocks tab with the page object that read:
page:AddButton(name)
page:AddButton(name, fileName)")
        image4:AddAttribute("data-zoom","")
        image4:AddClassAttribute("object-contain max-w-52 max-h-36 rounded overflow-hidden")


        AddHeading(section_explore, "Adding Labels", 4)
        section_explore:AddParagraph("To add text labels to your app, you need to add a label to the Page by using <code>page:AddLabel(name)</code>. The provided text will be both the label’s name as well as the text that it displays. By default, labels can be navigated by a screen reader.")

        Image image5 = section_explore:AddImage("/media/Blocks/AccessibleAppP1/Label.png","Code block from the blocks tab with the page object that read:
        page:AddLabel(name)")
        image5:AddText("Code block from the blocks tab with the page object that read:
        page:AddLabel(name)")
        image5:AddAttribute("data-zoom","")
        image5:AddClassAttribute("object-contain max-w-52 max-h-24 rounded overflow-hidden")

        AddHeading(section_explore, "Adding a Banner", 4)

        section_explore:AddParagraph("A Banner is a more complex element that can include multiple parts. How many parts are present in your app depends on how much information you give the action to make it. If you provide just a single piece of information using <code>page:AddBanner(title)</code>, the banner will have a single label with your given text.")
        section_explore:AddParagraph("Alternatively, if you give a second piece of text using <code>page:AddBanner(title, label)</code>, the banner will have both a title label and a secondary label beneath it.
Finally, the third option, <code>page:AddBanner(name, title, label)</code> works similarly to the previous option. In this case, the first value is the name, which will be read by screen readers and other accessibility technologies. Then, the second and third values are the title text and secondary label, respectively. You can use this option if you want to fine-tune the accessibility information separate from the text of the title.
")

        Image image6 = section_explore:AddImage("/media/Blocks/AccessibleAppP1/Banner.png","This shows a snippet from the palette for actions related to the banner. There are three AddBanner actions, the first with just a title. The second has name, title, and label. The third is title and label.")
        image6:AddText("This shows a snippet from the palette for actions related to the banner. There are three AddBanner actions, the first with just a title. The second has name, title, and label. The third is title and label.")
        image6:AddAttribute("data-zoom","")
        image6:AddClassAttribute("object-contain max-w-52 max-h-36 rounded overflow-hidden")

        section_explore:AddParagraph("<small><strong>[1]</strong> U.S. Department of Justice. Fact Sheet: New Rule on the Accessibility of Web Content and Mobile Apps Provided by State and Local Governments. April 2024. https://www.ada.gov/resources/2024-03-08-web-rule/</small>")

         Section section_engage
        section_engage:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_engage)
        AddHeading(section_engage, "Engage", 2)

        section_engage:AddParagraph("So far, you have learned about user interfaces and how to set up a basic app in Quorum Studio. Your task now is to become more comfortable in your design skills and start to add elements to your app. Your goals for this activity are to:")
        UnorderedList list1
        list1:AddClassAttribute("list-disc list-outside pl-8")
        list1:AddListItem("Properly set up a Form app")
        list1:AddListItem("Add at least one button")
        list1:AddListItem("Add text ")
        list1:AddListItem("Add a banner")
        section_engage:Add(list1)        

        AddHeading(section_engage, "Directions", 3)
        section_engage:AddParagraph("With your first app, work on making an "+dq+"About Me"+dq+" page. You should include a banner, at least 1 button, and at least 3 labels. You can also feel free to explore the other elements and add more, if you want to. Your app is accessible by default, so no additional work is required unless you want to customize the experience, visually or otherwise.")
        section_engage:AddParagraph("On your app, your banner should say something such as "+dq+"About Me!"+dq+" and include a subtitle of your choice that describes you. Your labels might include a few sentences about yourself, your hobbies, your favorite foods, etc. Lastly, your button should have a label – it might include an invitation to learn more, or it could just say your favorite word.")
        section_engage:AddParagraph("You can use the following template to get you started:")
        section_engage:Add(preformatter:GeneratePreformattedCode("use Libraries.Interface.Forms.Form
use Libraries.Interface.Forms.Page

Form form
Page page = form:GetMainPage()

form:Display()"))

        section_engage:AddParagraph("When you finish your project and run it, your app might look something similar to this screenshot below:")

        Image image7 = section_engage:AddImage("/media/Blocks/AccessibleAppP1/Form.png","This is an example about page about the person that wrote this example app, Kristine Monsada. She is a UX designer, graduated from UNLV in 2022, likes math and LEGOS. She also just got engaged, but don't tell her I told you, as it is not in the image. ")
        image7:AddText("This is an example about page about the person that wrote this example app, Kristine Monsada. She is a UX designer, graduated from UNLV in 2022, likes math and LEGOS. She also just got engaged, but don't tell her I told you, as it is not in the image. ")
        image7:AddAttribute("data-zoom","")
        image7:AddClassAttribute("object-contain max-w-96 max-h-96 rounded overflow-hidden")

        section_engage:AddParagraph("Note that this app is a static application. Although you are adding a button, it technically does not do anything yet. In a future lesson, you will learn how to add functionality to your apps.")

        AddHeading(section_engage, "Wrap up", 3)
        section_engage:AddParagraph("So far, you have only scratched the surface on app design, but you can invent whatever you want. What kind of app do you think you, or people you know, might want invented?")
        Section nextSection
        WriteNextTutorial(nextSection)
        bodyDiv:Add(nextSection)
        onPageDiv:Add(CreateHeadingTableOfContents())
    end

    action GetMetaDescription returns text
        return "Learn how to create an app in Quorum"
    end

    action GetSummaryName returns text
        return "Accessible Form App"
    end

    action GetImageLocation returns text
        return "/media/gettingStarted.png"
    end

    action GetName returns text
        return "Accessible Form App"
    end

    action GetShortDescription returns text
        return "how to learn about design and create apps in Quorum"
    end

    action GetLinkName returns text
        return "Create Accessible Apps Part 1"
    end

    action GetLocation returns text
        if GetNewLocation() not= ""
          return GetNewLocation()
        end
        return "tutorials/blocks/AccessibleAppP1.html"
    end

    action GetSectionName returns text
        if GetNewSectionName() not= ""
          return GetNewSectionName()
        end
        return "Quorum Blocks"
    end
end
