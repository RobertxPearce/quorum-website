use Libraries.Web.Page.all
use Libraries.Web.Page.Italic
use Libraries.Containers.Array
use Libraries.Web.Page.Image
use Libraries.Web.Page.Bold

class BlocksConditionals is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()
    Preformatter preformatter //helper

    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Learn Conditionals - Quorum Programming Language")
        AddDefaultHeaders()

        //page header
        Array<Division> divs = InitializeTutorialPage()
        Division bodyDiv = divs:Get(1)
        Division onPageDiv = divs:Get(2)

        Header headDiv
        headDiv:SetClassAttribute("flex flex-col gap-y-2")
        AddHeading(headDiv, "Hour 9: Conditionals", 1)

        headDiv:AddText("This lesson is to teach you about conditionals.")
        bodyDiv:Add(headDiv)

        Section section_overview
        section_overview:SetClassAttribute("flex flex-col gap-y-2")

        AddHeading(section_overview, "Overview", 2)
        section_overview:AddParagraph("So far, you have made programs that are sequential, meaning they always follow the same set of instructions from start to finish. In practice, programs are rarely so linear. Often, you need to do different things depending on different circumstances. In this lesson, you will learn how you can use conditional statements to change what code you run.")

        AddHeading(section_overview, "Goals", 3)
        section_overview:AddParagraph("You have the following goals for this lesson:")
        UnorderedList goalList
        goalList:AddClassAttribute("list-disc list-outside pl-8")
        goalList:AddListItem("Learn how to use "+dq+"if"+dq+" statements to control program execution")
        goalList:AddListItem("Learn how to further control code with "+dq+"else"+dq+" and "+dq+"elseif"+dq+" blocks")
        goalList:AddListItem("Learn how "+dq+"scope"+dq+" affects variables created inside "+dq+"if"+dq+" statements")
        section_overview:Add(goalList)

        bodyDiv:Add(section_overview)

        Section section_warmUp
        section_warmUp:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_warmUp)
        AddHeading(section_warmUp, "Warm up", 2)

        section_warmUp:AddParagraph("Traveling somewhere new can be fun, but it can also require planning. When you plan for a vacation or other travel, what are some factors that you consider when you start to pack your suitcase? How do you decide what to bring? Now, consider your decision making process. Can you formalize your decision making into rules (e.g. if X, then I will bring Y)? ")

        AddHeading(section_warmUp, "Vocabulary", 3)

        section_warmUp:AddParagraph("You will be learning about the following vocabulary words: ")
        
        WebTable table = AddWebTable("Vocabulary")
        TableBody tableBody = AddTableBody()
        
        Array<text> tableHeaderArray
        tableHeaderArray:Add("Term")
        tableHeaderArray:Add("Definition") 
   

        TableHeader thead = AddTableHeaderRow(tableHeaderArray)
        table:Add(thead)  

        Array<text> rubricText1
        rubricText1:Add("Conditional Statements")
        rubricText1:Add("Block programming is a style where visual blocks represent pieces of the computer code that can be manipulated through various forms of user input.") 
   
        tableBody:Add(AddTableBodyRow(rubricText1))


        Array<text> rubricText3
        rubricText3:Add("Boolean Expression")
        rubricText3:Add("An expression in programming that evaluates to either true or false.") 
     
        tableBody:Add(AddTableBodyRow(rubricText3))

         Array<text> rubricTextBlockEditor
        rubricTextBlockEditor:Add("Conditional")
        rubricTextBlockEditor:Add("An expression a program will check if true or false before proceeding to an action") 
     
        tableBody:Add(AddTableBodyRow(rubricTextBlockEditor))
    
        table:Add(tableBody)
        section_warmUp:Add(table)

        section_warmUp:AddParagraph("")
        AddHeading(section_warmUp, "Code", 3)

        section_warmUp:AddParagraph("You will be using the following new pieces of code: ")


        WebTable tableCode = AddWebTable("New Code to Learn")
        TableBody tableBodyCode = AddTableBody()
        
        Array<text> tableHeaderArrayCode
        tableHeaderArrayCode:Add("Quorum Code")
        tableHeaderArrayCode:Add("Code Example") 
        tableHeaderArrayCode:Add("Explanation")

        TableHeader theadCode = AddTableHeaderRow(tableHeaderArrayCode)
        tableCode:Add(theadCode)  

        Array<text> rubricText4
        rubricText4:Add("if (condition)
end
")
        rubricText4:Add("if weather = "+dq+"sunny"+dq+"
    //execute A
end
")
        rubricText4:Add("The if statement is a conditional statement. If the program evaluates the condition to be true, it will run the block of code contained inside.") 
   
        tableBodyCode:Add(AddTableBodyRow(rubricText4))

        Array<text> rubricText5
        rubricText5:Add("elseif")
        rubricText5:Add("if weather = "+dq+"sunny"+dq+"
    // execute A
elseif weather = "+dq+"snowy"+dq+"
    // execute B
end
")
        rubricText5:Add("The elseif block is a conditional that is only checked if the previous conditions in the structure were false. If the previous conditions were false and the elseif’s condition is true, it will execute the code contained within the elseif.") 
  
        tableBodyCode:Add(AddTableBodyRow(rubricText5))

    
        Array<text> rubricTextIf
        rubricTextIf:Add("else")
        rubricTextIf:Add("if weather = "+dq+"sunny"+dq+"
    // execute A
elseif weather = "+dq+"snowy"+dq+"
    // execute B
else
    // execute C
end
")
        rubricTextIf:Add("This is the default case in a chained if statement. This code will always run if all another above if statements evaluate to false") 
  
        tableBodyCode:Add(AddTableBodyRow(rubricTextIf))

        tableCode:Add(tableBodyCode)
        section_warmUp:Add(tableCode)
        section_warmUp:AddParagraph("")

        AddHeading(section_warmUp, "CSTA Standards", 3)
        Paragraph cstaPara
        cstaPara:AddText("This lesson covers the following ")
        Link linkStandards = cstaPara:AddLink("standards", "https://csteachers.org/k12standards/interactive/")
        cstaPara:AddText(":")
        linkStandards:SetTarget(linkStandards:newTab)
        section_warmUp:Add(cstaPara)

        UnorderedList standards
        standards:AddClassAttribute("list-disc list-outside pl-8")
        standards:AddListItem("<strong>3A-DA-10</strong>: Evaluate the tradeoffs in how data elements are organized and where data is stored.")
        section_warmUp:Add(standards)
  
        Section section_explore
        section_explore:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_explore)
        AddHeading(section_explore, "Explore", 2)
        
        section_explore:AddParagraph("In previous lessons, you have worked with using an if statement to get started with learning about the different coding structures. In this lesson, you will learn how and why to use them. If statements are the key to making complex programs, as they represent a program’s ability to make decisions.")
        
        Image image1 = section_explore:AddImage("/media/Blocks/Conditionals/ConditionalBlocks.png","A screenshot code blocks Quorum studio showing the conditionals available that read:
if true
end

elseif true

if true
else
end

else")
        image1:AddText("A screenshot code blocks Quorum studio showing the conditionals available that read:
if true
end

elseif true

if true
else
end

else")
        image1:AddAttribute("data-zoom","")
        image1:AddClassAttribute("object-contain max-w-96 max-h-96 rounded overflow-hidden")

        section_explore:AddParagraph("Imagine that you are playing a simple video game. For example, perhaps you are facing an enemy and you have two decisions of what your next move would be: fight or flight. You could decide to formalize your decision making process with some rules. It might look something like this:
")
        section_explore:Add(preformatter:GeneratePreformattedCode("if creature = “monster”
	if health >= 50
		output “time to attack!”
		fightXP = fightXP + 1
	else 
		output “run away!”
	end
end
"))

    section_explore:AddParagraph("Using these rules, you can determine whether you have encountered a monster and whether you have enough health. Otherwise, you choose to run away. Just like you can formalize rules for your decision making, you can also make rules for the computer to follow. If statements allow you to control what code the computer executes depending on the rules or conditions you set.
")
    section_explore:AddParagraph("There are 3 major parts of a conditional: the 
")
        UnorderedList list
        list:AddClassAttribute("list-disc list-outside pl-8")
        list:AddListItem("if statement (plus conditional), ")
        list:AddListItem("0 or more elseif statements (plus conditional), and then an")
        list:AddListItem("optional else statement.")
        section_explore:Add(list)

        WebTable tableIf = AddWebTable("Parts of the If Statement")
        TableBody tableBodyIf = AddTableBody()
        
        Array<text> tableHeaderArrayIf
        tableHeaderArrayIf:Add("Quorum Code")
        tableHeaderArrayIf:Add("Code") 
        tableHeaderArrayIf:Add("Explanation")
   

        TableHeader theadIf = AddTableHeaderRow(tableHeaderArrayIf)
        tableIf:Add(theadIf)  

        Array<text> rubricTextIf1
        rubricTextIf1:Add("if condition
end
")
        rubricTextIf1:Add("if true
  output "+dq+"hello world!"+dq+"
end
") 
        rubricTextIf1:Add("If there is only one action being tested, it will run the command if condition is true") 
   
        tableBodyIf:Add(AddTableBodyRow(rubricTextIf1))

        Array<text> rubricTextIf2
        rubricTextIf2:Add("condition")
        rubricTextIf2:Add("integer score = 87
score >= 90
") 
        rubricTextIf2:Add("Typically a boolean statement used to test a condition and will execute code if condition is met with true") 
  
        tableBodyIf:Add(AddTableBodyRow(rubricTextIf2))

        Array<text> rubricTextIf3
        rubricTextIf3:Add("if condition
elseif condition
end
")
        rubricTextIf3:Add("integer score = 87
if score >= 90
   output "+dq+"excellent work!"+dq+"
elseif score >= 80
   output "+dq+"good job!"+dq+"
end
") 
        rubricTextIf3:Add("If there are two conditions one action being tested, it will run the command if initial condition is true, if false, it will test the next condition") 
     
        tableBodyIf:Add(AddTableBodyRow(rubricTextIf3))

        Array<text> rubricTextIf4
        rubricTextIf4:Add("if condition
elseif condition
else
end
")
        rubricTextIf4:Add("integer score = 87
if score >= 90
   output "+dq+"excellent work!"+dq+"
elseif score >= 80
   output "+dq+"good job!"+dq+"
else 
   output "+dq+"keep practicing!"+dq+"
end
") 
        rubricTextIf4:Add("If there are two conditions, one action being tested, it will run the command if the initial condition is true, if false, it will test the next condition. If the 2nd test is false, it will run a default case (the else).") 
     
        tableBodyIf:Add(AddTableBodyRow(rubricTextIf4))
    
        tableIf:Add(tableBodyIf)
        section_explore:Add(tableIf)

        AddHeading(section_explore, "Creating a Conditional Statement ", 3)
        section_explore:AddParagraph("Creating a conditional statement involves using the "+dq+"if"+dq+" structure to define actions based on certain conditions. ")
        section_explore:AddParagraph("In programming, the actual code for conditional statements varies between languages. For instance, in Quorum, it would look like this:")
        section_explore:Add(preformatter:GeneratePreformattedCode("if conditional
   // perform action A
else
  // perform action B
end
"))

        section_explore:AddParagraph("When you think about how to write a conditional, it is often broken down into decision making where event A happens if the condition is true and event B happens if the condition is false. ")

        Image image2 = section_explore:AddImage("/media/Blocks/Conditionals/conditional.png","A flow chart format asking the question: Is it raining
If true, then you play indoors
If false, then you play outside")
        image2:AddText("A flow chart format asking the question: Is it raining
If true, then you play indoors
If false, then you play outside")
        image2:AddAttribute("data-zoom","")
        image2:AddClassAttribute("object-contain max-w-96 max-h-96 rounded overflow-hidden")

        section_explore:AddParagraph("The "+dq+"condition"+dq+" typically is a boolean statement that will run either true or false. These conditionals again use any or all of the following boolean operators:
")

        UnorderedList list1
        list1:AddClassAttribute("list-disc list-outside pl-8")
        list1:AddListItem("<strong>Equality</strong> (=): Checks if two values are equal.")
        list1:AddListItem("<strong>Inequality</strong> (not=): Checks if two values are not equal.")
        list1:AddListItem("<strong>Greater than</strong> (>): Checks if one value is greater than another.")
        list1:AddListItem("<strong>Less than</strong> (<): Checks if one value is less than another.")
        list1:AddListItem("<strong>Greater than or equal to </strong> (>=): Checks if one value is greater than or equal to another.")
        list1:AddListItem("<strong>Less than or equal to</strong> (<=): Checks if one value is less than or equal to another.")
        section_explore:Add(list1)

        section_explore:AddParagraph("Additionally, there are logical operators that are often used with conditional operators to combine multiple conditions:")
        UnorderedList list2
        list2:AddClassAttribute("list-disc list-outside pl-8")
        list2:AddListItem("<strong>Logical AND</strong> (and): True if both conditions are true.")
        list2:AddListItem("<strong>Logical OR</strong> (or): True if at least one of the conditions is true.")
        list2:AddListItem("<strong>Logical NOT</strong> (not): Inverts the truth value of a condition.")
        section_explore:Add(list2)

        section_explore:AddParagraph("You can use different types of variables with these conditional operators. For example: "+dq+"5 < 10"+dq+" would result in <strong>true</strong> and "+dq+"4 < 10 and 7 >= 15"+dq+" would result in <strong>false</strong>.")

        AddHeading(section_explore, "Nested Conditionals and "+dq+"elseif"+dq+" ", 3)
        section_explore:AddParagraph("It is possible (and sometimes useful) to place conditionals inside of other conditionals. Be careful when nesting them. Doing so is commonplace in programming, but some discretion to keep your code from getting confusing is warranted.")
        Image image4 = section_explore:AddImage("/media/Blocks/Conditionals/NestedLoops.png","A 16 line code block in Quorum that reads: 
integer testScore = 75
text grade = 

if testScore > 90
    grade = A
else
    if testScore > 80
        grade = B
    else
        if testScore > 70
            grade = C
        else
            grade = D
        end
    end
end

output Students grade: + grade
")
        image4:AddAttribute("data-zoom","")
        image4:AddClassAttribute("object-contain max-w-96 max-h-96")

        section_explore:AddParagraph("In this example, you have to think more carefully about what is going on in this piece of code because the testScores are so nested. In this example:")
        UnorderedList list3
        list3:AddClassAttribute("list-disc list-outside pl-8")
        list3:AddListItem("If the testScore is greater than 90, it gets an "+dq+"A."+dq+"")
        list3:AddListItem("Otherwise, it checks if the score is greater than 80 for a "+dq+"B."+dq+"")
        list3:AddListItem("If not, it looks at scores above 70 for a "+dq+"C."+dq+"")
        list3:AddListItem("Finally, anything below 70 gets a "+dq+"D."+dq+"")
        section_explore:Add(list3)

        section_explore:AddParagraph("Scoping can be determined multimodally. Visually, some multi-line blocks are inside of each other and shoved to the right. This means they are self-contained in that region. Aurally, for screen reader users, although screen readers vary slightly in what they read, they tend to say first the line of code, in addition to the nesting level and the number of top level blocks inside that region. The idea is that you can get a sense of scope in different ways.")
        section_explore:AddParagraph("In this particular case, instead of nesting conditionals, you can use the "+dq+"elseif"+dq+" block to test extra conditions. Examine the revised example below:")

        Image image3 = section_explore:AddImage("/media/Blocks/Conditionals/FixNested.png","A screenshot of a Quorum program. It reads:
integer testScore = 75
text grade = 
if testScore > 90
    grade = A
elseif testScore > 80
    grade = B
elseif testScore > 70
    grade = C
else
    grade = D
end
output Students grade:  + grade")
        image3:AddAttribute("data-zoom","")
        image3:AddClassAttribute("object-contain max-w-96 max-h-96")

        section_explore:AddParagraph(""+dq+"Elseif"+dq+" statements are optional extra pieces you can add to an "+dq+"if"+dq+" statement. They act as extra conditionals that are only tested if the conditions before them were false. Conditions are always evaluated in order, from top to bottom, and the if statement will never check or run other conditionals or their code if a previous condition was true.")
        AddHeading(section_explore, "Nothing else worked, so else ", 3)
        section_explore:AddParagraph("As one final block, you can add an else block to an if statement. In text, this might be as follows:")
        section_explore:Add(preformatter:GeneratePreformattedCode("if condition
   //do something
elseif condition2
  //do a different something
elseif condition3
  //do an even more different something
else
   //condition, condition2, and condition3 were all false
end
"))
        section_explore:AddParagraph("The basic idea is that the computer checks the condition in the "+dq+"if"+dq+" first. If it is true, the block executes and then jumps to the final end. If it is false, it then checks condition 2, with the same procedure. The idea is that one, and only one, of the blocks runs.")
        Section section_engage
        section_engage:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_engage)
        AddHeading(section_engage, "Engage", 2)
        section_engage:AddParagraph("Now that you are more familiar with conditionals, it is time to practice using conditionals. Before you make your own program, start by guessing some of the outputs of these conditionals.")

        AddHeading(section_engage, "Directions", 3)
        section_engage:AddParagraph("This activity is divided into two parts.")
        AddHeading(section_engage, "Task 1: Logic it out", 4)
        section_engage:AddParagraph("When you are creating your conditional statements, you are essentially creating <strong>boolean expressions</strong> that are either true or false. Practice a few statements for you to determine what the output will be.
")

        section_engage:AddParagraph("<i>1. Does this statement result in true or false?</i>")    
        Image imagephone = section_engage:AddImage("/media/Blocks/Conditionals/Phone.png","A block of Quorum code that reads:
text q = ''What is your favorite phone?''
text answer = ''Android Phone''
if answer = ''Apple''
output ''I like the iPhone too!''
end")
       
        imagephone:AddAttribute("data-zoom","")
        imagephone:AddClassAttribute("object-contain max-w-96 max-h-36 rounded overflow-hidden")

        section_engage:AddParagraph("<i>2. What does this code output?</i>") 
        Image image5 = section_engage:AddImage("/media/Blocks/Conditionals/BooleanExp.png","A block of Quorum code that reads:
integer a = 5
integer b = 10
if a < b
output ''a is less than b.''
else
output ''b is greater than or equal to a.''
end")
        
        image5:AddAttribute("data-zoom","")
        image5:AddClassAttribute("object-contain max-w-96 max-h-96 rounded overflow-hidden")

        section_engage:AddParagraph("<i>3. What does this code output?</i>") 
        Image image6 = section_engage:AddImage("/media/Blocks/Conditionals/Class.png","A block of Quorum code that reads:
text class_choice = ''mage''
if class_choice = ''warrior''
    output ''strong and tough!''
elseif class_choice = ''mage''
    output ''magic spells!''
elseif class_choice = ''ranger''
    output ''bows and arrows!''
elseif class_choice = ''thief''
    output ''stealthiness''
else
    output ''please choose a class''
end")
        
        image6:AddAttribute("data-zoom","")
        image6:AddClassAttribute("object-contain max-w-96 max-h-96 rounded overflow-hidden")

        section_engage:AddParagraph("<i>4. How could you change this program in order to make the output statement on line 3 run?</i>")
        Image image7 = section_engage:AddImage("/media/Blocks/Conditionals/Vote.png","A block of Quorum code that reads:
integer age = 17
if age >= 21
    output ''you can vote!''
end
    output ''you are old enough to vote!''")
        image7:AddAttribute("data-zoom","")
        image7:AddClassAttribute("object-contain max-w-96 max-h-48 overflow-hidden rounded")


        AddHeading(section_engage, "Task 2: Restaurant Menu", 4)
        section_engage:AddParagraph("In this activity, you will simulate a restaurant, where you will be creating and ordering off of a menu. Your menu should include 4 main courses, 3 drink options, and 2 dessert options. ")
        section_engage:AddParagraph("In your code, you will use a series of "+dq+"if"+dq+" statements to evaluate variables containing food orders. To choose your order, assign the food choice in a variable like so:")

        Image image9 = section_engage:AddImage("/media/Blocks/Conditionals/AccessoryVar.png","A block of Quorum code that reads:
        text accessoryType = ''earrings''
output accessoryType")
        
        image9:AddAttribute("data-zoom","")
        image9:AddClassAttribute("object-contain max-w-96 max-h-24 rounded overflow-hidden")

        section_engage:AddParagraph("Using your assigned variables and "+dq+"if"+dq+" statements, your computer will be your virtual waiter and ask what you would like to eat for dinner tonight. Try changing the values of your main course, drink, and dessert to see how the "+dq+"if"+dq+" statements react. Bon appetit! ")
        section_engage:AddParagraph("You are required to include "+dq+"if"+dq+" statements, "+dq+"elseif"+dq+" statements, and a default "+dq+"else"+dq+" statement if a person orders an item not on the menu. At the end, be sure to output all the items that you are ordering.")

        Image image8 = section_engage:AddImage("/media/Blocks/Conditionals/RobotServer.jpg","An image of a robot server inside of a restaurant next to an empty table.")
        image8:AddText("An image of a robot server inside of a restaurant next to an empty table.")
        image8:AddAttribute("data-zoom","")
        image8:AddClassAttribute("object-contain max-w-96 max-h-96 overflow-hidden rounded")
        
        section_engage:AddText("<center><small><a href=" + dq + "https://unsplash.com/photos/white-and-black-air-cooler-hnNPdAt8u2k" + dq + ">Restaurant delivery robot waiter by restaurant_robots</a></center></small>")

        section_engage:AddParagraph("You can use this code sample as a reference:")

        Image image10 = section_engage:AddImage("/media/Blocks/Conditionals/Accessory.png","A block of Quorum code that reads:
        text accessory = ''necklace''
if accessory = ''hair clips''
    output ''the best hairclips are clips with bears on them!''
elseif accessory = ''earrings''
    output ''how many ear piercings do you have?''
elseif accessory = ''headband''
    output ''i love the mickey mouse headbands from disneyland!''
elseif accessory = ''necklace''
    output ''the best necklaces are always handmade''
elseif accessory = ''bracelet''
    output ''disney pandora bracelets are super cute!''
else
    output ''i'm not familiar with that accessory but i am sure it is beautiful!''
end
output ''your favorite accessory is '' + accessory")
        
        image10:AddAttribute("data-zoom","")
        image10:AddClassAttribute("object-contain max-w-96 max-h-96 overflow-hidden rounded")

        section_engage:AddParagraph("The code example of this below reads:")

        section_engage:Add(preformatter:GeneratePreformattedCode("text accessory = "+dq+"necklace"+dq+"
if accessory = "+dq+"hair clips"+dq+"
    output "+dq+"the best hairclips are clips with bears on them!"+dq+"
elseif accessory = "+dq+"earrings"+dq+"
    output "+dq+"how many ear piercings do you have?"+dq+"
elseif accessory = "+dq+"headband"+dq+"
    output "+dq+"i love the mickey mouse headbands from disneyland!"+dq+"
elseif accessory = "+dq+"necklace"+dq+"
    output "+dq+"the best necklaces are always handmade"+dq+"
elseif accessory = "+dq+"bracelet"+dq+"
    output "+dq+"disney pandora bracelets are super cute!"+dq+"
else
    output "+dq+"i'm not familiar with that accessory but i am sure it is beautiful!"+dq+"
end
output "+dq+"your favorite accessory is "+dq+" + accessory"))

        AddHeading(section_engage, "Wrap up", 3)
        section_engage:AddParagraph("Trade programs with a partner of your choice and have them order off your virtual restaurant. Have a short discussion and answer the following: How do you think an ordering kiosk, such as one in a fast food restaurant, processes orders?")

        Section nextSection
        WriteNextTutorial(nextSection)
        bodyDiv:Add(nextSection)
        onPageDiv:Add(CreateHeadingTableOfContents())
    end

    action GetMetaDescription returns text
        return "Learn how to create conditional statements in Quorum"
    end

    action GetSummaryName returns text
        return "Conditionals"
    end

    action GetImageLocation returns text
        return "/media/gettingStarted.png"
    end

    action GetName returns text
        return "Conditionals"
    end

    action GetShortDescription returns text
        return "how to create conditionals in Quorum"
    end

    action GetLinkName returns text
        return "Conditionals"
    end

    action GetLocation returns text
        if GetNewLocation() not= ""
          return GetNewLocation()
        end
        return "tutorials/blocks/BlocksConditionals.html"
    end

    action GetSectionName returns text
        if GetNewSectionName() not= ""
          return GetNewSectionName()
        end
        return "Quorum Blocks"
    end
end
