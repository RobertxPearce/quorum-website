use Libraries.Web.Page.all
use Libraries.Web.Page.Italic
use Libraries.Containers.Array
use Libraries.Web.Page.Image

class GettingStartedBlocks is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()
    Preformatter preformatter //helper

    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Getting Started with Blocks - Quorum Programming Language")
        AddDefaultHeaders()

        //page header
        Array<Division> divs = InitializeTutorialPage()
        Division bodyDiv = divs:Get(1)
        Division onPageDiv = divs:Get(2)

        Header headDiv
        headDiv:SetClassAttribute("flex flex-col gap-y-2")
        AddHeading(headDiv, "Hour 1: Introduction to Computer Science", 1)

        headDiv:AddText("This lesson is to teach you about the basics of Quorum Studio and familarize 
        yourself with a programming environment.")
        bodyDiv:Add(headDiv)

        Section section_overview
        section_overview:SetClassAttribute("flex flex-col gap-y-2")

        AddHeading(section_overview, "Overview", 2)
        section_overview:AddParagraph("In this lesson, you will be introduced to the field of computer science. The focus is on the big picture, from what the field of study is, to some of the activities you might do as a participant in it. You will also engage with a programming language, the building block whereby any software is created.")
       
        
        AddHeading(section_overview, "Goals", 3)
        section_overview:AddParagraph("You have the following goals for this lesson:")
        UnorderedList goalList
        goalList:AddClassAttribute("list-disc list-outside pl-8")
        goalList:AddListItem("Learn the basics of computer science and why learning about it can be helpful")
        goalList:AddListItem("Learn about Quorum Studio and some of its features")
        goalList:AddListItem("Create a project for inventing your own software")
        section_overview:Add(goalList)

        bodyDiv:Add(section_overview)

        Section section_warmUp
        section_warmUp:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_warmUp)
        AddHeading(section_warmUp, "Warm up", 2)
        
        section_warmUp:AddParagraph("Consider all of the technologies that you use on a daily basis. Many of them today include some form of computer chip, which allows a device to work. This can include fridges, toasters, cars, gaming systems, televisions, phones, or any number of items. For some of these devices, adding chips has substantially changed how society uses them, while others less so. What kind of devices do you think have seen the most pros, and the most cons, from the addition of computers?")
        
        AddHeading(section_warmUp, "Vocabulary", 3)

        section_warmUp:AddParagraph("You will be learning about the following vocabulary words: ")
        
        WebTable table = AddWebTable("Vocabulary")
        TableBody tableBody = AddTableBody()
        
        Array<text> tableHeaderArray
        tableHeaderArray:Add("Term")
        tableHeaderArray:Add("Definition") 
   

        TableHeader thead = AddTableHeaderRow(tableHeaderArray)
        table:Add(thead)  

        Array<text> rubricText1
        rubricText1:Add("Computer Science")
        rubricText1:Add("The study of computers and computational systems. This includes issues like information processing, automation, and algorithms.") 
   
        tableBody:Add(AddTableBodyRow(rubricText1))

        Array<text> rubricText2
        rubricText2:Add("Project")
        rubricText2:Add("An organized set of files, like source code files, images, movies, graphics scenes, sounds, or other items, that work together when creating software.") 
  
        tableBody:Add(AddTableBodyRow(rubricText2))

        Array<text> rubricText3
        rubricText3:Add("Integrated Development Environment")
        rubricText3:Add("Software that includes many common functions involved in the process of creating your own inventions.") 
     
        tableBody:Add(AddTableBodyRow(rubricText3))

         Array<text> rubricTextConsole
        rubricTextConsole:Add("Console")
        rubricTextConsole:Add("A text-based interface that allows you to interact with the programs on a computer") 
     
        tableBody:Add(AddTableBodyRow(rubricTextConsole))
    
        table:Add(tableBody)
        section_warmUp:Add(table)

        section_warmUp:AddParagraph("")
        AddHeading(section_warmUp, "Code", 3)

        section_warmUp:AddParagraph("You will be using the following new pieces of code: ")


        WebTable tableCode = AddWebTable("New Code to Learn")
        TableBody tableBodyCode = AddTableBody()
        
        Array<text> tableHeaderArrayCode
        tableHeaderArrayCode:Add("Quorum Code")
        tableHeaderArrayCode:Add("Code Example") 
        tableHeaderArrayCode:Add("Explanation")

        TableHeader theadCode = AddTableHeaderRow(tableHeaderArrayCode)
        tableCode:Add(theadCode)  

        Array<text> rubricText4
        rubricText4:Add("say")
        rubricText4:Add("say "+dq+"Hello, World"+dq+"")
        rubricText4:Add("A command that talks out loud through the computer's speaker") 
   
        tableBodyCode:Add(AddTableBodyRow(rubricText4))

        Array<text> rubricText5
        rubricText5:Add("output")
        rubricText5:Add("output "+dq+"Hello, World"+dq+"")
        rubricText5:Add("A command that sends text to the computer's console") 
  
        tableBodyCode:Add(AddTableBodyRow(rubricText5))

    
        tableCode:Add(tableBodyCode)
        section_warmUp:Add(tableCode)
        section_warmUp:AddParagraph("")

        AddHeading(section_warmUp, "CSTA Standards", 3)
        Paragraph cstaPara
        cstaPara:AddText("This lesson covers the following ")
        Link linkStandards = cstaPara:AddLink("standards", "https://csteachers.org/k12standards/interactive/")
        cstaPara:AddText(":")
        linkStandards:SetTarget(linkStandards:newTab)
        section_warmUp:Add(cstaPara)

        UnorderedList standards
        standards:AddClassAttribute("list-disc list-outside pl-8")
        standards:AddListItem("<strong>3A-CS-01</strong>: Explain how abstractions hide the underlying implementation details of computing systems embedded in everyday objects.")
        standards:AddListItem("<strong>3A-CS-02</strong>: Compare levels of abstraction and interactions between application software, system software, and hardware layers.")
        section_warmUp:Add(standards)

        Section section_explore
        section_explore:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_explore)
        AddHeading(section_explore, "Explore", 2)

        section_explore:AddParagraph("In this lesson, you are going to explore the field of <strong>computer science</strong>. Many of you may be familiar with computers. They are part of your daily life in many ways, from cars, to tablets, or even refrigerators. These devices have hardware, like the car itself, and this hardware is built by electrical engineers, mechanical engineers, and others. You, however, will be focusing these lessons on the software, which is the piece that computer scientists create. This split, the hardware and the software, allows a physical device to stay the same, while meaningfully changing what it can do or how a user interacts with it. ")
        section_explore:AddParagraph("One common misconception with computer science, however, is that it is about using software. For example, you may be familiar with Microsoft Word or Excel. Computer scientists generally want people to know about how to use such software and many do, but a crucial skill in computer science is how to invent software. Inventing software requires a very different way of thinking than using it does, because you need to learn one of the many languages that computer's speak.")

        Bold IDEitalics 
        IDEitalics:AddText("Integrated Development Environments (IDE)")
        Paragraph idePara
        idePara:AddText("Fortunately, modern computer scientists do not start from scratch. They have invented software for, weirdly, inventing: tools called ")
        idePara:Add(IDEitalics)
        idePara:AddText(". Such environments come in many forms and are created by many manufacturers for many purposes. In this course, you will use one called Quorum Studio. Explore a picture of this environment for a moment: ")
        section_explore:Add(idePara)

        Image image = section_explore:AddImage("/media/Blocks/Intro to Computer Science/QS6Blank.png","This is a picture of Quorum Studio 6.0. There are menus on the top, a set of buttons for controlling programs, and a variety of tabs related to the functionality of the programs you write.")
        image:AddText("This is a picture of Quorum Studio 6.0. There are menus on the top, a set of buttons for controlling programs, and a variety of tabs related to the functionality of the programs you write.")
        image:AddAttribute("data-zoom","")

        section_explore:AddParagraph("Quorum Studio has a variety of functions you can use to create your software. Many of these functions you can learn as you go. You will shortly explore a few of these functions next.")

        AddHeading(section_explore, "Downloading Quorum Studio", 3)

        section_explore:AddParagraph("As mentioned previously, throughout these future lessons, you will be using Quorum Studio to complete various lessons in learning about the fundamentals of computer science. ")

        Link link1
        link1:AddText("following link to take you to the downloads page")
        link1:SetAddress("https://quorumlanguage.com/download.html")
        link1:SetTarget(link1:newTab)
    

        Paragraph downloadPara
        downloadPara:AddText("To download Quorum Studio, you may press on the ")
        downloadPara:Add(link1)
        downloadPara:AddText(". By pressing the blue button that says " + dq + "Download Quorum Studio" + dq + " your computer should automatically configure the installer in order to use the software. Once downloaded, be sure to run the Quorum Studio installer until completion to confirm that the software is on your computer.")
        section_explore:Add(downloadPara)

        AddHeading(section_explore, "Menus and Toolbar", 3)
        section_explore:AddParagraph("There are several menus in Quorum Studio. These include the File menu, for creating, opening, and closing <strong>projects</strong>. There is also an Edit menu and view menu, for cut/copy/paste operations and resizing the environment. The Edit menu also allows you to change properties in Quorum Studio or the project you are working on. The navigation menu provides ways of controlling the screen, especially in the editor, from the keyboard or mouse. ")

        Image image1 = section_explore:AddImage("/media/Blocks/Intro to Computer Science/menus.png","Screenshots of the File, Edit, and View Menu from Quorum Studio")
        image1:AddText("Screenshots of the File, Edit, and View Menu from Quorum Studio")
        image1:AddAttribute("data-zoom","")
        image1:AddClassAttribute("object-contain max-w-96 max-h-96")

        section_explore:AddParagraph("One important menu you may use a good deal is Run. In this one, you control the programs you invent by running it, debugging it, or stopping it. The final three menus are used less often. That said, the teams menu is used for controlling various versions of the software you write on popular websites like Github, whereas the window and help menus provide navigation controls across the application and some extras like automatically checking for updates.")

         Image image2 = section_explore:AddImage("/media/Blocks/Intro to Computer Science/run menu.png","Useful commands when running Quorum Studio include:
Run: Command + R (Mac) / CTRL + R (PC)  
Build: Command + B (Mac) / CTRL + B (PC)  
Debug: Command + D (Mac) / CTRL + D (PC)  
Clean: F5
Clean and Build: Command + Shift + B (Mac) /
CTRL + Shift + B (PC)")
        image2:AddText("Useful commands when running Quorum Studio include:
Run: Command + R (Mac) / CTRL + R (PC)  
Build: Command + B (Mac) / CTRL + B (PC)  
Debug: Command + D (Mac) / CTRL + D (PC)  
Clean: F5
Clean and Build: Command + Shift + B (Mac) /
CTRL + Shift + B (PC)")
        image2:AddAttribute("data-zoom","")
        image2:AddClassAttribute("object-contain max-w-96 max-h-96")

        section_explore:AddParagraph("The toolbar serves as a set of buttons that meet the same needs as the menu. From left to right, the buttons make a new project, a new file, open a project, or save a file. The next two allow you to undo or redo a change.")
        section_explore:AddParagraph("The green buttons hold a purpose related to running the software you are making. The hammer builds your program, while the soap dispenser cleans it, which means it deletes anything the environment has made for you behind the scenes and starts over. The rightward triangle, called the play button, runs your program, while the bug runs the debugger. The red stop button stops a running program. ")
        section_explore:AddParagraph("The final five buttons on the toolbar are gray and related to running a debugger, which is a program for finding errors in a program. These buttons will be explored in more detail when discussing debugging later.")

        Image image3 = section_explore:AddImage("/media/Blocks/Intro to Computer Science/toolbar.png","Descriptions of the buttons on the toolbar menu")
        image3:AddText("Descriptions of the buttons on the toolbar menu")
        image3:AddAttribute("data-zoom","")
        image3:AddClassAttribute("object-contain max-w-96 max-h-96")

        AddHeading(section_explore, "Project Tabs", 3)
        section_explore:AddParagraph("Below the toolbar on the left hand side, available with the hotkey COMMAND + 1 on Mac or CTRL + 1 on Windows, are the project tabs. There are four such tabs, the Projects tab, the Scene tab, the Palette tab, and the Blocks tab. The project tab is where you can observe any open projects you are working on. Loading many projects at once, or just a few, is normal and reasonable.")

        Image image4 = section_explore:AddImage("/media/Blocks/Intro to Computer Science/tabs.png","Descriptions of the tabs on the projects tab that read: projects, scene, palette, blocks")
        image4:AddText("Descriptions of the tabs on the projects tab that read: projects, scene, palette, blocks")
        image4:AddAttribute("data-zoom","")
        image4:AddClassAttribute("object-contain max-w-96 max-h-96")

        section_explore:AddParagraph("While not discussed in this curriculum, one type of project you can make is 2D or 3D accessible games. In doing so, while you can program them manually, you can also create custom scenes. In Quorum, scenes are the fundamental concept of creating graphics through programming. Such scenes might be, for example, a 3D medieval castle that you can navigate with the keyboard and even use with devices for accessibility (e.g., screen readers or Braille devices). The palette, while also not used in this curriculum, is a location for storing any of the options for adjusting scenes. ")
        section_explore:AddParagraph("Finally, the blocks tab is for block-based programming. In many kinds of programming environments, you learn to invent by reading documentation. As you continue to work with Quorum Studio more, you will notice that the blocks tab adapts to give you " + dq + "hints" + dq + " while you are working on code. The IDE provides documentation, code completion, and information about errors that you face while programming.")

        AddHeading(section_explore, "The Editor", 3)
        Image image5 = section_explore:AddImage("/media/Blocks/Intro to Computer Science/QS6Blank.png","This is a picture of Quorum Studio 6.0. There are menus on the top, a set of buttons for controlling programs, and a variety of tabs related to the functionality of the programs you write.")
        image5:AddText("This is a picture of Quorum Studio 6.0. There are menus on the top, a set of buttons for controlling programs, and a variety of tabs related to the functionality of the programs you write.")
        image5:AddAttribute("data-zoom","")

        section_explore:AddParagraph("In the screenshot of Quorum Studio above, the editor is a light gray region that is used for creating, manipulating, and adjusting the software you are inventing. You will be able to know how to use the editor to create programs in the next lesson, but it is important to become familiar with the environment's regions. ")
        section_explore:AddParagraph("Editors in programming environments have many helpers to assist in learning. Modern environments are often categorized as either using visualization, such as shaped blocks that snap together, or raw text, which you have to memorize and type. Quorum Studio features versatile learning on how to program through text or block-based programming without losing information upon translating the two forms. What this means is that anything you can invent in text mode you can invent with blocks and vice versa. Further, the blocks are accessible. Graphical elements in the editor do use graphics, but they send reasonable and appropriate messages to accessibility devices on multiple platforms.")

        AddHeading(section_explore, "Information Tabs", 3)

         Image image6 = section_explore:AddImage("/media/Blocks/Intro to Computer Science/console.png","The console section of Quorum Studio")
        image6:AddText("The console section of Quorum Studio")
        image6:AddAttribute("data-zoom","")
        image6:AddClassAttribute("object-contain max-w-96 max-h-96 rounded overflow-hidden")

        Bold consoleBold 
        consoleBold:AddText("console")

        Paragraph consolePara
        consolePara:AddText("On the bottom of the environment are six tabs: console, errors, variables, breakpoints, call stack, and search results. These less used tabs will be partially discussed later, but one to be aware of is ")
        consolePara:Add(consoleBold)
        consolePara:AddText(". Typically, when you want to output information (such as sound, text, or graphics) on your programs, it would be shown in this area. ")
        section_explore:Add(consolePara)

         Section section_engage
        section_engage:AddClassAttribute("flex flex-col gap-y-2")
        bodyDiv:Add(section_engage)
        AddHeading(section_engage, "Engage", 2)

        section_engage:AddParagraph("In this first part of the lesson, you will start to familiarize yourself with Quorum Studio and create your very first project. Your task for this program is to be able to output a funny phrase of your choosing either through text or through your computer’s audio system. You are to be using Quorum’s commands such as output and say in order to successfully complete your task.")

        AddHeading(section_engage, "Directions", 3)
        section_engage:AddParagraph("Computers often have multiple ways to output information to a user. There are graphics, like pictures on the screen, in addition to speech, text,  or sometimes feel (e.g., vibration on a tablet). To invent anything though, you first need to create a project. For this, you first go to the File Menu and select the New Project button. ")

         Image image7 = section_engage:AddImage("/media/Blocks/Intro to Computer Science/NewProjectMenu.png","This is an image of Quorum Studio with the File Menu open and the selection on the New Project Button open. The hotkey is CTRL or COMMAND N.")
        image7:AddText("This is an image of Quorum Studio with the File Menu open and the selection on the New Project Button open. The hotkey is CTRL or COMMAND N.")
        image7:AddAttribute("data-zoom","")

        section_engage:AddParagraph("After you do so, a window will appear that lets you select from various kinds of programs. You will select a Console Application, give it a name, and press the ok button. This will create a new project, put it on your hard drive wherever you want, and place your new piece of software in the Projects Tab. There are many kinds of projects beyond console applications, such as games, apps, data science programs, robots, or others. However, you will be focusing on console applications for now first to build your computer science foundations.")

         Image image8 = section_engage:AddImage("/media/Blocks/Intro to Computer Science/CreateProgramWizard.png","This image shows Quorum Studio's New Project Dialog. The dialog contains 5 tabs with various kinds of projects on them. For this screen, it contains console, app, game, scene, and mobile. For each, you can set the project name and location.")
        image8:AddText("This image shows Quorum Studio's New Project Dialog. The dialog contains 5 tabs with various kinds of projects on them. For this screen, it contains console, app, game, scene, and mobile. For each, you can set the project name and location.")
        image8:AddAttribute("data-zoom","")

        section_engage:AddParagraph("Once you have created your new project, it should appear underneath the projects tab. Your project name may be different to the one below but all the contents should be the same. You will want to navigate down the tree structure of the project opening the source code folder and access the file: Main.quorum. Be sure to double press on the file itself to open it on the editor. This .quorum file is where you will be writing your very first program.")

         Image image9 = section_engage:AddImage("/media/Blocks/Intro to Computer Science/firstProgram.png","Screenshot of projects tab where you should open the 'Main.quorum' file to work on")
        image9:AddText("Screenshot of projects tab where you should open the 'Main.quorum' file to work on")
        image9:AddAttribute("data-zoom","")
        image9:AddClassAttribute("object-contain max-w-64 max-h-36 overflow-hidden rounded")


        section_engage:AddParagraph("Once your project opened, you have opened the source code folder and selected the editor, open the Blocks tab, which will then give a screen like so: ")
         Image image10 = section_engage:AddImage("/media/Blocks/Intro to Computer Science/BlankBlocks.png","This now shows an open blocks tab. This tab contains various kinds of helper blocks, like variables or control structures. On the right hand side is the editor, which contains a single blank block.")
        image10:AddText("This now shows an open blocks tab. This tab contains various kinds of helper blocks, like variables or control structures. On the right hand side is the editor, which contains a single blank block.")
        image10:AddAttribute("data-zoom","")
        
        section_engage:AddParagraph("Notice how the gray editor region now looks different as it has a file that you can use to start typing or building your programs through blocks.")
        section_engage:AddParagraph("On the blocks tab, it is sectioned off into four categories:")
       
        UnorderedList blocksTab
        blocksTab:AddClassAttribute("list-disc list-outside pl-8")
        blocksTab:AddListItem("Advice is for more advanced blocks that utilize the blank block (AKA the white block) and will show more blocks and functions to use such as when you learn more about objects. This section also shows all the available options of blocks as well.")
        blocksTab:AddListItem("Basic blocks are used for simple output and variable creation.")
        blocksTab:AddListItem("Action blocks are used when you want to create functions in your programs.")
        section_engage:Add(blocksTab)

        section_engage:AddParagraph("Although these concepts may seem overwhelming upon first glance, you will start to become more familiar with these concepts as you continue to invent more programs!")
        section_engage:AddParagraph("When you are in the Advice category, notice that there are many options on the left hand side of the screen that allows you to know what kinds of operations are available. As the first goal, find the commands for say or output and choose which one you want to use. You can use the keyboard or the mouse for these operations using commands like the following:")

        WebTable tableBlocks = AddWebTable("Keyboard Navigation for Blocks Tab")
        TableBody tableBodyBlocks = AddTableBody()
        
        Array<text> tableHeaderArrayBlocks
        tableHeaderArrayBlocks:Add("Operation")
        tableHeaderArrayBlocks:Add("Command") 
        tableHeaderArrayBlocks:Add("What does it do?") 

        TableHeader theadBlocks = AddTableHeaderRow(tableHeaderArrayBlocks)
        tableBlocks:Add(theadBlocks)  

        Array<text> rubricText6
        rubricText6:Add("Go to the Blocks Tab")
        rubricText6:Add("COMMAND + 1 or CTRL + 1") 
        rubricText6:Add("Jumps the focus to the block palette")

        tableBodyBlocks:Add(AddTableBodyRow(rubricText6))

       Array<text> rubricText7
        rubricText7:Add("Go to the editor")
        rubricText7:Add("COMMAND + 2 or CTRL + 2") 
        rubricText7:Add("Jumps the focus to the code editor")

        tableBodyBlocks:Add(AddTableBodyRow(rubricText7))

        Array<text> rubricText8
        rubricText8:Add("Move to a new block")
        rubricText8:Add("Tab Key or SHIFT + Tab key") 
        rubricText8:Add("In the block palette, it moves the focus to a new region")

        tableBodyBlocks:Add(AddTableBodyRow(rubricText8))

        Array<text> rubricText9
        rubricText9:Add("Select a block in the block palette")
        rubricText9:Add("Press enter then move up or down") 
        rubricText9:Add("Puts a new block in the code editor")

        tableBodyBlocks:Add(AddTableBodyRow(rubricText9))

    
        tableBlocks:Add(tableBodyBlocks)
        section_engage:Add(tableBlocks)

        section_engage:AddParagraph(" ")
        section_engage:AddParagraph("Through whatever mechanism works for you, like drag and drop or the keyboard, move a block from the block palette to the code editor. ")
        
        Image image11 = section_engage:AddImage("/media/Blocks/Intro to Computer Science/BlockKeyboard.png","The notable piece of this screenshot is that there is a green say block on the screen in the editor. This block can be moved up or down with the arrow keys and placed inside with Enter. Note that the screen reader reads the current cursor, not information about the block, in order to provide information about where it is being placed. The escape key gets rid of the addition.")
        image11:AddText("The notable piece of this screenshot is that there is a green say block on the screen in the editor. This block can be moved up or down with the arrow keys and placed inside with Enter. Note that the screen reader reads the current cursor, not information about the block, in order to provide information about where it is being placed. The escape key gets rid of the addition.")
        image11:AddAttribute("data-zoom","")


        section_engage:AddParagraph("The example below demonstrates what a say block might look like on the screen once finished. Note that this single block is exactly equivalent, in text, to having a single line of code. In fact, under the hood, it really is exactly the same thing. Put another way, even if a professional programmer used blocks, it would make no difference. The output and code would be identical under the hood. If you want to use blocks, or text, and not tell anyone, it can be your little secret.")

         Image image12 = section_engage:AddImage("/media/Blocks/Intro to Computer Science/WouldPiratesLie.png","This final example shows in the editor one particular code block for say. The text in the block is 'I'm not a pirate. Would non-pirates lie?' It's not a funny joke, but I'm a computer scientist. What did you expect?")
        image12:AddText("This final example shows in the editor one particular code block for say. The text in the block is 'I'm not a pirate. Would non-pirates lie?' It's not a funny joke, but I'm a computer scientist. What did you expect?")
        image12:AddAttribute("data-zoom","")

        section_engage:AddParagraph("As a final task, choose the phrase you would like the computer to speak, or output, and run your program. ")
        section_engage:AddParagraph("Now, run your program. Remember, you can run your program from the Run menu by selecting the Run option, or by clicking the green "+dq+"play"+dq+" button on the toolbar, or by using the hotkey (Ctrl+R on Windows, or Cmd+R on Mac).")

        AddHeading(section_engage, "Wrap up", 3)
        section_engage:AddParagraph("Work with a partner to follow the directions in the introduction. If either of you is stuck, ask each other or the instructor how to proceed. Once you are done, run your program and demonstrate what it does to your partner.")

        Section nextSection
        WriteNextTutorial(nextSection)
        bodyDiv:Add(nextSection)
        onPageDiv:Add(CreateHeadingTableOfContents())
    end

    action GetMetaDescription returns text
        return "Learn how to get started with the Quorum programming language in Blocks."
    end

    action GetSummaryName returns text
        return "Getting Started with Quorum Blocks"
    end

    action GetImageLocation returns text
        return "/media/gettingStarted.png"
    end

    action GetName returns text
        return "Getting Started on Blocks"
    end

    action GetShortDescription returns text
        return "how to get started programming in Quorum"
    end

    action GetLinkName returns text
        return "Getting Started on Blocks"
    end

    action GetLocation returns text
        if GetNewLocation() not= ""
          return GetNewLocation()
        end
        return "tutorials/blocks/gettingStartedBlocks.html"
    end

    action GetSectionName returns text
        if GetNewSectionName() not= ""
          return GetNewSectionName()
        end
        return "Quorum Blocks"
    end
end
