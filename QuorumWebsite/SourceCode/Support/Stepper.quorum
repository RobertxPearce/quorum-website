use Libraries.Web.Page.Division
use Libraries.Web.Page.OrderedList
use Libraries.Web.Page.ListItem
use Libraries.Web.Page.Span
use Libraries.Containers.Array
use Libraries.Web.Page.Link
use Libraries.Data.Formats.ScalableVectorGraphics.Path
class Stepper is Division
    integer selected = 0
    Array<Link> links
    action Setup
        OrderedList list
        list:SetClassAttribute("flex items-center w-full p-3 
space-x-2 text-sm font-medium text-center text-gray-500 
bg-white border border-gray-200 rounded-lg shadow-sm 
dark:text-gray-400 sm:text-base dark:bg-gray-800 
dark:border-gray-700 sm:p-4 sm:space-x-4 rtl:space-x-reverse")
        
        i = 0
        repeat while i < links:GetSize()
            boolean active = i = selected
            ListItem item = GetListItem(i, active)
            list:Add(item)
                        i = i + 1
        end
        
        Add(list)
    end
    
    action GetListItem(integer i, boolean selected) returns ListItem
ListItem item
if selected
item:SetClassAttribute("flex items-center text-quorum-blue-150 font-bold px-4 py-2")
        else
item:SetClassAttribute("flex items-center")
        end
        Link link = links:Get(i)
item:Add(link)
        
        if i + 1 < links:GetSize()
//This is ugly, but the Span class isn't doing what I expect here.
item:AddText("<svg class='w-3 h-3 ms-2 sm:ms-4 rtl:rotate-180' aria-hidden='true' xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 12 10'>
            <path stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m7 9 4-4-4-4M1 9l4-4-4-4'/>
        </svg>")
        end
        
        return item
    end
    
    action GetSpan(text value) returns Span
        Span span
        span:AddText(value)
        span:SetClassAttribute("flex items-center justify-center w-5 h-5 me-2 text-xs border border-blue-600 rounded-full shrink-0 dark:border-blue-500")
        return span
    end
    
    action AddStepperLink(text value, text target)
        Link link
        //link:AddText(value)
        link:AddText(GetSpan(value):Generate())
        link:SetAddress(target)
        links:Add(link)
    end
    
    action GetSelected returns integer
        return selected
    end

    action SetSelected(integer selected)
        me:selected = selected
    end

end