use Libraries.Web.Page.all
use Libraries.Containers.Array

class MobileAppleTutorial is Lesson
    text dq = ""
    dq = dq:GetDoubleQuote()
    text cr = ""
    cr = cr:GetCarriageReturn()
    Preformatter preformatter //helper

    action Setup
        LineBreak break //will be used multiple times
        
        //html header stuff
        SetWebPageTitle("Apple Devices - Quorum Programming Language")
        AddDefaultHeaders()

        //page header
        Array<Division> divs = InitializeTutorialPage()
        Division bodyDiv = divs:Get(1)
        Division onPageDiv = divs:Get(2)

        Header headDiv
        headDiv:SetClassAttribute("flex flex-col gap-y-2")
        AddHeading(headDiv, "Using Quorum on Apple iOS Devices", 1)
        headDiv:AddParagraph("The Quorum programming language also allows programs to be created within Quorum Studio and to be deployed onto iOS devices. This feature is largely experimental, but shows proof of concept and allows for many basic functions to work on the device. In this tutorial, we demonstrate how to put programs on an iPhone. The procedures are similar for other iOS devices. Note that this only works on Apple hardware at this time, as is typical for iOS programming. Note that to put Quorum programs onto a real device you will need to follow the steps on making signing certificates but the certificates are not necessary if you will only be running the program through an iOS simulator.")

        bodyDiv:Add(headDiv)


        Section section_prereq
        section_prereq:AddClassAttribute("flex flex-col gap-y-2")

        AddHeading(section_prereq,"Prerequisites", 2)
        section_prereq:AddParagraph("Before putting Quorum programs onto iOS devices, there are a few things needed in addition to the regular tools for Quorum:")
        UnorderedList unorderedList0
        unorderedList0:AddClassAttribute("list-disc list-outside pl-8")
        ListItem listItem1
        unorderedList0:Add(listItem1)
        listItem1:AddText("A Mac running on OS X. (Apple requires iPhone programs to be made on Macs.)")
        ListItem listItem2
        unorderedList0:Add(listItem2)
        listItem2:AddText("An iOS device (such as an iPhone or iPad) or an iOS simulator.")
        ListItem listItem3
        unorderedList0:Add(listItem3)
        listItem3:AddText("Xcode. You can download or update this from the App Store on your Mac.")
        ListItem listItem4
        unorderedList0:Add(listItem4)
        listItem4:AddText("An Apple ID. If you don't already have one, you can sign up for one for free at ")
        Link link
        link:AddClassAttribute("underline text-quorum-blue-150")
        link:SetAddress("https://appleid.apple.com")
        link:AddText("appleid.apple.com")
        listItem4:Add(link)

        Section section_writing
        section_writing:AddClassAttribute("flex flex-col gap-y-2")
        AddHeading(section_writing, "Writing the Quorum Program", 2)
        section_writing:AddParagraph("Once everything is ready, the first step is to write the Quorum program. The program needs to use the Game class to work properly on iOS devices. For this tutorial, we will make a new Quorum project using the " + dq + "Game Application"+dq+ " template, however, you could use any existing Quorum game project. You can find complete steps to making a new Quorum project in the Getting Started with Quorum tutorial.")
        AddHeading(section_writing, "Running Quorum on an iOS device", 3)
        section_writing:AddParagraph("To run Quorum on a physical device, there are several steps we need to go through. First, we need to install XCode, Apple's development environment. The reason we need to do this is because Apple requires special certificates to run a program on our physical devices. These have to be setup before running our program or the program will fail after a lengthy compile on the Quorum side. ")
        AddHeading(section_writing, "Using Xcode to Set Up a Development Profile", 3)
        section_writing:AddParagraph("This tutorial will use a free development profile, using an Apple ID. Note that you won’t be able to distribute the app remotely or submit it to the App Store with this free profile; you will need to get a paid developer’s license from Apple for that. To set up your free profile, open Xcode. Under the Xcode navigation menu, go to Preferences. Choose the Accounts tab in the Preferences window. In the bottom-left corner there is a button marked with a plus symbol. Click the button and select "+dq+"Add Apple ID"+dq+". The window that appears will ask you to login with your Apple ID. Enter your account information and then select "+dq+"Sign In"+dq+". If you don’t have an Apple ID, you can select "+dq+"Create Apple ID"+dq+" to set one up, or you can create one for free at appleid.apple.com. Once signed in, the account tab should look like this:")
  
        Image image1 = section_writing:AddImage("/media/windows/AccountWithUser2023.png","The Account With User.")
        image1:AddAttribute("data-zoom", "")
        section_writing:AddParagraph("If your Apple ID is not already selected in the column on the left, select it now. Then use the " + dq + "Manage Certificates" + dq + " button in the bottom right corner of the window. This will open a new window that will allow you to create a signing identity to use for your developer profile.")
        Image image2 = section_writing:AddImage("/media/windows/SigningCertificates2023.png","The Signing Certificates.")
        image2:AddAttribute("data-zoom", "")
        section_writing:AddParagraph("In the bottom left hand corner"  + ", select the " + dq + "plus (+)" + dq + " button. A dropdown that says " + dq + "Apple Development" + dq + " should show. Click it to create your profile signing certificates. If successful, you will see the name of your device under " + dq + "Apple Development Certificates." + dq +" Choose " + dq + "Done" + dq + " to return to the preferences page.") 
        Image image3 = section_writing:AddImage("/media/windows/AddedCertif2023.png","The Apple Development Certificates.")
        image3:AddAttribute("data-zoom", "")

        section_writing:AddParagraph("Although the account is now set up in Xcode, we 
            still need to create a provisioning profile for the program. A 
            provisioning profile is an identifier that is made for a single 
            iOS program. It’s used to show who developed it, and that it 
            hasn’t been changed. To create a provisioning profile, we’ll need to 
            use Xcode to make a dummy iOS project. Although this won’t be used 
            as part of the final program, making a project in Xcode will let 
            us create the provisioning profile, as well as test to make sure 
            we can connect to the iOS device. In Xcode, navigate to File > New > Project (or 
            use the hotkey SHIFT-COMMAND-N).")
        
        Image image4 = section_writing:AddImage("/media/windows/xcodeWindow.png","The window for xcode when there is no project open.")
        image4:AddAttribute("data-zoom", "")
        
       
        section_writing:AddParagraph("Next you need to choose a template to create an iOS app project. This will be a dummy project so no specific template is needed so the "+dq+"App"+dq+" template will suffice. ")
        Image image5 = section_writing:AddImage("/media/windows/NewXcodeProject.png","The Xcode new project dialog window where you can choose a dialog and the App template is selected.")
        image5:AddAttribute("data-zoom", "")

        section_writing:AddParagraph("Give your project a name and an organization identifier. This will need to match the identifier for your app in Quorum Studio. In this case, we used org.quorumlanguage.")
        Image image6 = section_writing:AddImage("/media/windows/XcodeProjectOptions.png","The Xcode Project Options with MyBlankApplication in the Product Name field and org.quorumlanguage in the Organization identifier field.")
        image6:AddAttribute("data-zoom", "")
        section_writing:AddParagraph("You can put the Xcode project anywhere convenient on your system. Once you have selected a location, the project should be created and the main Xcode window will open.")
        
        section_writing:AddParagraph("Go to the Signing and Capabilities section of the application and tell it to automatically manage signing. You can access this by selecting the root folder in the project view. You may need to make a Team for this to work and one person will count as team.")
        Image image7 = section_writing:AddImage("/media/windows/XcodeProjectSigning.png","The Xcode Project open to the signing and capabilites section. and the Bundle Identifier field is selected and org.quourmlanguage is in the field.")
        image7:AddAttribute("data-zoom", "")

        Paragraph para1
        para1:AddText("An external reference on these certificates can be found on the ")
        Link link1 = para1:AddLink("ioscodedesigning website", "https://ioscodesigning.com/generating-code-signing-files/")
        link1:AddClassAttribute("underline text-quorum-blue-150")
        para1:AddText(".")
        section_writing:Add(para1)

        Section section_running_on_xcode
        section_running_on_xcode:AddClassAttribute("flex flex-col gap-y-2")

        AddHeading(section_running_on_xcode, "Running the Dummy Xcode Project", 2)

        section_running_on_xcode:AddParagraph("Now, we can test the dummy Xcode application on the 
        device. This step will ensure that your profile is fully set up and that 
        you can successfully place an app on your device. To do this, choose the 
        Run button, select Run from the Product menu in the top navigation bar, 
        or use the Run hotkey (COMMAND-R). The dummy Xcode project should install 
        itself on the device and launch. Xcode may prompt you to unlock your device 
        to complete installation.")

        section_running_on_xcode:AddParagraph("If the program runs without issue, you can skip to the 
        next section. However, you may receive a message stating that your program 
        could not be launched because your developer app certificate is not trusted 
        on the device. If this happens, open the Settings on your device, then 
        navigate to General > VPN and Device Management, and select your Apple ID. From 
        this menu you can verify the app developer. The app should then run.")
        section_running_on_xcode:AddParagraph("When you run the app, it should do nothing but open a 
        blank screen. This is because that’s all the templated project we made in 
        Xcode is meant to do. You have now confirmed that the development environment 
        is set up to put apps on the device.")

        Section section_running_on_device
        // Keep the same spacing as the rest of the document while keeping iPhone image small
        section_running_on_device:AddClassAttribute("space-y-2")
        section_running_on_device:AddHeading("Running the Quorum Project on your Device", 2)
        section_running_on_device:AddParagraph("Open the Quorum project in Quorum Studio.")
        section_running_on_device:AddParagraph("Either use your existing Game project or create a new one using a template. Here we will make one using the Game Template.")
        Image image8 = section_running_on_device:AddImage("/media/windows/QSNewProject2023.png","Quorum Studio open with the new project template dialog open with the Game template selected")
        image8:AddAttribute("data-zoom", "")
        section_running_on_device:AddParagraph("Open project properties by either right clicking on the project name or making sure your project name is selected and going to " + dq + "Edit" + dq + " in the top toolbar.")
        Image image9 = section_running_on_device:AddImage("/media/windows/QSProjectProp2023.png","Quorum Studio with the Project Dropdown open and the Properties selection highlighted.")
        image9:AddAttribute("data-zoom", "")

        // In-depth instructions on adding the Xcode properties to Quorum Studio
        section_running_on_device:AddParagraph("To connect Quorum with Xcode, you need three properties: the Bundle Identifier, Signing Identity, and Provisioning Profile.")
        section_running_on_device:AddParagraph("The Bundle Identifier is shown on the main project settings page in Xcode under the 'General' tab. The Signing Identity and Provisioning Profile appear in the build log when you run your dummy Xcode project on a device. Copy these values exactly into the Quorum settings.")
        Image image10 = section_running_on_device:AddImage("/media/windows/AppleDeviceSettings2025.png","Screenshot of the Apple Device Settings window in Quorum Studio with example iOS configuration fields.")
        image10:AddAttribute("data-zoom", "")
        section_running_on_device:AddParagraph("Quorum also requires access to the provisioning profiles directory. If it does not exist, create it with 'mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles', then add a symbolic link: 'ln -s ~/Library/Developer/Xcode/UserData/Provisioning\ Profiles ~/Library/MobileDevice/Provisioning\ Profiles'. This links Xcode’s profiles to Quorum.")
        section_running_on_device:AddParagraph("After entering the properties, select "+dq+"OK"+dq+" to build the Quorum project.")

        section_running_on_device:AddParagraph("To build the project for iOS navigate to the Run menu and select Send to iOS or use the shortcut COMMAND + SHIFT + I.The first time we run an application it will likely fail, as our iPhone does not know to trust the developer account we just created. This often ends up with a message similar to saying we have an Untrusted Developer. To fix the problem, we go to Settings -> VPN and Device Management and should notice the application we made under Developer App. We then select this app and click Trust. We then might need to select the Send to IOS button a second time.")
        Image image11 = section_running_on_device:AddImage("/media/windows/QSSendtoios2023.png","Quorum Studio with the Run Menu bar item open and Send to iOS is selected")
        image11:AddAttribute("data-zoom", "")
        section_running_on_device:AddParagraph("Compilation will take a while so be patient. Here is an example of a project running on the iOS simulator:")
        Image image12 = section_running_on_device:AddImage("/media/windows/iosSimExample.png","The window of the iOS simulator running a Quorum Game with a Blue box and a green floor")
        image12:AddAttribute("data-zoom", "")

        section_running_on_device:AddParagraph("Select the device we want in the Device List under the Apple tab. If we plug in the device after Quorum Studio loads, we may need to reboot Quorum Studio, as it only checks for new devices on bootup. Also check the Bundle field and makes sure that matches the bundle name setup in Xcode. For this example we made the bundle name to be org.quorumlanguage which is set by default in new Quorum Studio projects.")       
        Image image13 = section_running_on_device:AddImage("/media/windows/QSAppleDeviceSettings.png","Quorum Studio with the Project Properties Dialog open on the Apple tab. The bundle field reads org.quorumlanguage and an iPhone simulator is selected in the device list.")
        image13:AddAttribute("data-zoom", "")
        section_running_on_device:AddParagraph("Once the properties are filled in, select "+dq+"OK"+dq+". You are ready to build the Quorum project.")
        section_running_on_device:AddParagraph("To build the project for iOS navigate to the Run menu and select Send to iOS or use the shortcut COMMAND + SHIFT + I.The first time we run an application it will likely fail, as our iPhone does not know to trust the developer account we just created. This often ends up with a message similar to saying we have an Untrusted Developer. To fix the problem, we go to Settings -> VPN and Device Management and should notice the application we made under Developer App. We then select this app and click Trust. We then might need to select the Send to IOS button a second time.")
        Image image14 = section_running_on_device:AddImage("/media/windows/QSSendtoios2023.png","Quorum Studio with the Run Menu bar item open and Send to iOS is selected")
        image14:AddAttribute("data-zoom", "")
        section_running_on_device:AddParagraph("Compilation will take a while so be patient. Here is an example of a project running on the iOS simulator:")
        Image image15 = section_running_on_device:AddImage("/media/windows/iosSimExample.png","The window of the iOS simulator running a Quorum Game with a Blue box and a green floor")
        image15:AddAttribute("data-zoom", "")
 
        AddHeading(section_running_on_device, "Known Issues", 3)
        section_running_on_device:AddParagraph("Sometimes the device list in the Project Properties dialog in Quorum Studio will be empty even though Xcode is installed along with the simulators or a physical device is connected.
        The cause for this is usually that the command line tools set on your Mac does not contain the command " + AddCodeTag("xctrace") + " which is needed to find the devices available on your Mac. To fix this, make
        sure the command line tools were installed with your Xcode installation and to set the command line tools to default which contains " + AddCodeTag("xctrace") + " with the command " + AddCodeTag("sudo xcode-select --reset") )
        section_running_on_device:AddParagraph("To verify the command line tools are correct you can run " + AddCodeTag("xcode-select -p") + " and the result should be " + AddCodeTag("/Applications/Xcode.app/Contents/Developer"))

        bodyDiv:Add(section_prereq)
        bodyDiv:Add(section_writing)
        bodyDiv:Add(section_running_on_xcode)
        bodyDiv:Add(section_running_on_device)

        Section nextSection
        WriteNextTutorial(nextSection)
        bodyDiv:Add(nextSection)
        onPageDiv:Add(CreateHeadingTableOfContents())
    end

    action GetMetaDescription returns text
        return "Learn how to use the Quorum programming language for coding on Apple iOS devices like the iPhone or iPad."
    end

    action GetSummaryName returns text
        return "Apple Mobile"
    end

    action GetImageLocation returns text
        return "/media/Phone.png"
    end

    action GetName returns text
        return "Apple Mobile"
    end

    action GetShortDescription returns text
        return "how to use Quorum on an Apple iOS device."
    end

    action GetLocation returns text
        return "tutorials/mobile/iOS.html"
    end

    action GetLinkName returns text
        return "Apple iOS Mobile Support"
    end

    action GetSectionName returns text
        return "Mobile"
    end
end
